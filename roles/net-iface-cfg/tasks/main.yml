# Define IP address per interface
---

# Required values:
#  - nodes: dictionary with interface and ip per host
#  - type: kind of nodes

# Not using nmcli tasks as these depend on failing package ("dbus-python" bindings)
- name: "Configure data plane interfaces per {{ type }}"
  shell:
    ip addr flush dev {{ iface_name }} \
    && ip addr add {{ iface_ip_net }} dev {{ iface_name }} \
    && ip link set {{ iface_name }} up
  args:
    executable: /bin/bash
  ignore_errors: True
  when: (iface_name | search("eth")) and (iface_in_target_node) and (iface_exists)
  vars:
    iface_exists: "{{ iface_name | iface_exists(target_ips) }}"
    iface_in_target_node: "{{ nodes | iface_in_target_node(target, iface_ip) }}"
    target_ips: "{{ hostvars[inventory_hostname] }}"
    target: "{{ ansible_host | ip_strip_subnet }}"
    iface_name: "{{ item.1 | get_dict_key }}"
    iface_ip: "{{ iface_ip_net | ip_strip_subnet }}"
    iface_ip_net: "{{ item.1 | get_dict_value }}"
    ifaces: "{{ item }}"
  with_subelements:
    - "{{ nodes }}"
    - ip
  become: yes
