# Clone SDX-L2 repository and source in modules
---

- name: Check for SDX-L2 repository
  stat:
    path: /home/{{ onos.user.id }}/onos/apps/sdx-l2
  register: sdxl2_repo

- name: Clone SDX-L2 repository
  git:
    repo: "{{ onos.apps.sdxl2.repository.url }}"
    dest: /home/{{ onos.user.id }}/onos/apps/sdx-l2
    force: no
  when: sdxl2_repo.stat.exists == False

- name: Ensure SDX-L2 cell exists
  file:
    path: /home/{{ onos.user.id }}/onos/tools/test/cells/sdxl2
    state: touch

#- name: Add SDX-L2 app to modules.defs
#  lineinfile:
#    path: /home/{{ onos.user.id }}/onos/modules.defs
#    # Replace after last occurrence
#    regexp: "'(\\/\\/apps\\/(.*))',"
#    backrefs: yes
#    line: "    '\\1',\n    '//apps/sdx-l2:onos-apps-sdx-l2-oar',"

- name: Add SDX-L2 app to modules.defs
  blockinfile:
    path: /home/{{ onos.user.id }}/onos/modules.defs
    insertafter: '^APPS = \['
    content: |
    
        APP_SDXL2 = [
            '//apps/sdx-l2:onos-apps-sdx-l2-oar'
        ]
        
        APPS = APPS + APP_SDXL2

- name: Insert SDX-L2 cell contents
  blockinfile:
    dest: /home/{{ onos.user.id }}/onos/tools/test/cells/sdxl2
    state: present
    content: |
      # SDXL2 deployment
      export ONOS_NIC=
      export OC1=""
      export OC2=""
      export OC3=""
      export ONOS_APPS="drivers,openflow,drivers.corsa"

- name: Replace OCX IPs in environment
  replace:
    path: /home/{{ onos.user.id }}/onos/tools/test/cells/sdxl2
    # Match only on specific line (e.g., OC1="..." will match with var onos1)
    regexp: '(.*)export OC{{ oc }}=(?:")(.*)(?:")+(.*)'
    replace: '\1export OC{{ oc }}="{{ ip }}\3"'
  vars:
    # Filter addresses in list to just have the IP value
    oc: "{{ item.key | regex_replace('onos(.*)', '\\1') }}"
    ip: "{{ iface | ip_strip_subnet }}"
    iface: "{{ item.value.ip | get_dict_value_for_key('mgmt') }}"
  with_dict:
    "{{ onos.controllers }}"

- name: Replace ONOS_NIC IP range in environment
  replace:
    path: /home/{{ onos.user.id }}/onos/tools/test/cells/sdxl2
    # Match only on specific line (e.g., OC1="..." will match with var onos1)
    regexp: '(.*)export ONOS_NIC=(?:")*(.*)(?:")*(.*)'
    replace: '\1export ONOS_NIC="{{ subnet }}"\3'
  vars:
    # Filter subnet from specific ctrl IP
    subnet: "{{ iface_ip | ip_compute_subnet }}"
    iface_ip: "{{ iface_ip_net | ip_strip_subnet }}"
    iface_ip_net: "{{ item.value | get_dict_value_for_key('mgmt') }}"
  with_dict:
    "{{ onos.controllers.onos1 }}"

# Line must be added before non-interactivity SSH checks block any other command
- name: Load SDXL2 cell
  blockinfile:
    dest: ~/.bashrc
    state: present
    marker: "# {mark} ANSIBLE MANAGED BLOCK cell (sdxl2)"
    insertbefore: "^# ~/.bashrc: executed(.*)"
    content: |

      # Load specific SDX-L2 cell
      cell sdxl2

