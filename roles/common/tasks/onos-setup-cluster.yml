# Set-up ONOS cluster
---

- name: Check cluster status
  shell: netstat -apen | grep 6653 | grep LISTEN | wc -l
  args:
    executable: /bin/bash
  ignore_errors: True
  register: running_cluster
  become: yes

- block:
  # Prepare and run cluster if not done already
  - name: Find previous cluster-temp files
    find:
      paths: "/tmp"
      patterns: "onos*,stc*"
      recurse: yes
      file_type: any
    register: onos_cluster_prev_tmp_files

  - name: Clear previous cluster-temp files
    file:
      path: "{{ item.path }}"
      state: absent
    with_items:
      - "{{ onos_cluster_prev_tmp_files.files }}"

  - name: Clear previous buck-out directory
    file:
      path: "{{ item}}"
      state: absent
    with_items:
      ~/onos/buck-out

  - name: Build ONOS repository sources
    shell: ~/onos/tools/build/onos-buck build onos-local --no-cache
    args:
      executable: /bin/bash
      chdir: ~/onos
    vars:
      ansible_user: "{{ onos.user.id }}"
      ansible_ssh_pass: "{{ onos.user.pass }}"

#  - name: Insert SSH keys on ONOS cluster instances
#    shell: "/home/{{ onos.user.id }}/onos/tools/test/bin/onos-push-keys $OC{{ oc }}"
#    vars:
#      # Filter addresses in list to just have the IP value
#      oc: "{{ item.key | regex_replace('onos(.*)', '\\1') }}"
#    environment:
#      LD_LIBRARY_PATH: /usr/local/lib
#    with_dict:
#      "{{ onos.controllers }}"

  - name: Fetch $OC1 public key
    shell: cat ~/.ssh/id_rsa.pub
    register: ssh_oc1_key

  # Warning: override onos-push-keys functionality
  # Use $OC1 public key to authorise its access to the rest of cluster nodes
  # Note: command is delegated to all cluster nodes, as double-hop SSH is expected
  - name: Insert SSH keys on ONOS cluster instances
    authorized_key:
      state: present
      user: "{{ onos.user.id }}"
      key: "{{ item[0] }}"
    delegate_to: "{{ item[1] }}"
    vars:
      target_ips: "{{ hostvars[inventory_hostname] }}"
      ansible_user: "{{ onos.user.id }}"
      ansible_ssh_pass: "{{ onos.user.pass }}"
    with_nested:
  #    - "{{ lookup(\"file\", \"~/.ssh/id_rsa.pub\") }}"
      - "{{ ssh_oc1_key.stdout }}"
      - "{{ onos.controllers | ips_from_nodes(target_ips) }}"

  - name: Install prerequisites
    shell: ~/onos/tools/test/bin/stc prerequisites
    args:
      executable: /bin/bash
      chdir: ~/onos

  - name: Set-up the cluster
    shell: ~/onos/tools/test/bin/stc setup
    args:
      executable: /bin/bash
      chdir: ~/onos

  become_user: "{{ onos.user.id }}"
  become: yes
  when: running_cluster.stdout | int < 1
